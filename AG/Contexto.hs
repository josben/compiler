-- do not edit; automatically generated by UU.AG
module AG.Contexto where
-- CuerpoInterno -----------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for CuerpoInterno.Cons:

-}
{-
   local variables for CuerpoInterno.Nil:

-}
type CuerpoInterno = [(DeclBodyPortlet)]
-- semantic domain
type T_CuerpoInterno = ( )
-- cata
sem_CuerpoInterno :: (CuerpoInterno) ->
                     (T_CuerpoInterno)
sem_CuerpoInterno (list) =
    (Prelude.foldr (sem_CuerpoInterno_Cons) (sem_CuerpoInterno_Nil) ((Prelude.map sem_DeclBodyPortlet list)))
sem_CuerpoInterno_Cons :: (T_DeclBodyPortlet) ->
                          (T_CuerpoInterno) ->
                          (T_CuerpoInterno)
sem_CuerpoInterno_Cons (hd_) (tl_) =
    let 
    in  ( )
sem_CuerpoInterno_Nil :: (T_CuerpoInterno)
sem_CuerpoInterno_Nil  =
    let 
    in  ( )
-- Decl --------------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for Decl.ConsDeclSimple:

-}
{-
   local variables for Decl.ConsDefInterna:

-}
data Decl = Decl_ConsDeclSimple (DeclSimple)
          | Decl_ConsDefInterna (DefInterna)
          deriving ( Show)
-- semantic domain
type T_Decl = ( )
-- cata
sem_Decl :: (Decl) ->
            (T_Decl)
sem_Decl ((Decl_ConsDeclSimple (_declSimple))) =
    (sem_Decl_ConsDeclSimple ((sem_DeclSimple (_declSimple))))
sem_Decl ((Decl_ConsDefInterna (_defInterna))) =
    (sem_Decl_ConsDefInterna ((sem_DefInterna (_defInterna))))
sem_Decl_ConsDeclSimple :: (T_DeclSimple) ->
                           (T_Decl)
sem_Decl_ConsDeclSimple (declSimple_) =
    let 
    in  ( )
sem_Decl_ConsDefInterna :: (T_DefInterna) ->
                           (T_Decl)
sem_Decl_ConsDefInterna (defInterna_) =
    let 
    in  ( )
-- DeclBodyPortlet ---------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for DeclBodyPortlet.ConsDefBackground:

-}
{-
   local variables for DeclBodyPortlet.ConsDefCampos:

-}
{-
   local variables for DeclBodyPortlet.ConsDefTipo:

-}
{-
   local variables for DeclBodyPortlet.ConsDefTitle:

-}
data DeclBodyPortlet = DeclBodyPortlet_ConsDefBackground (String)
                     | DeclBodyPortlet_ConsDefCampos (DefCampos)
                     | DeclBodyPortlet_ConsDefTipo (String)
                     | DeclBodyPortlet_ConsDefTitle (String)
                     deriving ( Show)
-- semantic domain
type T_DeclBodyPortlet = ( )
-- cata
sem_DeclBodyPortlet :: (DeclBodyPortlet) ->
                       (T_DeclBodyPortlet)
sem_DeclBodyPortlet ((DeclBodyPortlet_ConsDefBackground (_string))) =
    (sem_DeclBodyPortlet_ConsDefBackground (_string))
sem_DeclBodyPortlet ((DeclBodyPortlet_ConsDefCampos (_defCampos))) =
    (sem_DeclBodyPortlet_ConsDefCampos ((sem_DefCampos (_defCampos))))
sem_DeclBodyPortlet ((DeclBodyPortlet_ConsDefTipo (_string))) =
    (sem_DeclBodyPortlet_ConsDefTipo (_string))
sem_DeclBodyPortlet ((DeclBodyPortlet_ConsDefTitle (_string))) =
    (sem_DeclBodyPortlet_ConsDefTitle (_string))
sem_DeclBodyPortlet_ConsDefBackground :: (String) ->
                                         (T_DeclBodyPortlet)
sem_DeclBodyPortlet_ConsDefBackground (string_) =
    let 
    in  ( )
sem_DeclBodyPortlet_ConsDefCampos :: (T_DefCampos) ->
                                     (T_DeclBodyPortlet)
sem_DeclBodyPortlet_ConsDefCampos (defCampos_) =
    let 
    in  ( )
sem_DeclBodyPortlet_ConsDefTipo :: (String) ->
                                   (T_DeclBodyPortlet)
sem_DeclBodyPortlet_ConsDefTipo (string_) =
    let 
    in  ( )
sem_DeclBodyPortlet_ConsDefTitle :: (String) ->
                                    (T_DeclBodyPortlet)
sem_DeclBodyPortlet_ConsDefTitle (string_) =
    let 
    in  ( )
-- DeclField ---------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for DeclField.ConsDeclField:

-}
data DeclField = DeclField_ConsDeclField (String)
               deriving ( Show)
-- semantic domain
type T_DeclField = ( )
-- cata
sem_DeclField :: (DeclField) ->
                 (T_DeclField)
sem_DeclField ((DeclField_ConsDeclField (_string))) =
    (sem_DeclField_ConsDeclField (_string))
sem_DeclField_ConsDeclField :: (String) ->
                               (T_DeclField)
sem_DeclField_ConsDeclField (string_) =
    let 
    in  ( )
-- DeclFields --------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for DeclFields.Cons:

-}
{-
   local variables for DeclFields.Nil:

-}
type DeclFields = [(DeclField)]
-- semantic domain
type T_DeclFields = ( )
-- cata
sem_DeclFields :: (DeclFields) ->
                  (T_DeclFields)
sem_DeclFields (list) =
    (Prelude.foldr (sem_DeclFields_Cons) (sem_DeclFields_Nil) ((Prelude.map sem_DeclField list)))
sem_DeclFields_Cons :: (T_DeclField) ->
                       (T_DeclFields) ->
                       (T_DeclFields)
sem_DeclFields_Cons (hd_) (tl_) =
    let 
    in  ( )
sem_DeclFields_Nil :: (T_DeclFields)
sem_DeclFields_Nil  =
    let 
    in  ( )
-- DeclSimple --------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for DeclSimple.ConsAddIcon:

-}
{-
   local variables for DeclSimple.ConsAddPortlet:

-}
{-
   local variables for DeclSimple.ConsAddTitle:

-}
data DeclSimple = DeclSimple_ConsAddIcon (String)
                | DeclSimple_ConsAddPortlet (String)
                | DeclSimple_ConsAddTitle (String)
                deriving ( Show)
-- semantic domain
type T_DeclSimple = ( )
-- cata
sem_DeclSimple :: (DeclSimple) ->
                  (T_DeclSimple)
sem_DeclSimple ((DeclSimple_ConsAddIcon (_string))) =
    (sem_DeclSimple_ConsAddIcon (_string))
sem_DeclSimple ((DeclSimple_ConsAddPortlet (_string))) =
    (sem_DeclSimple_ConsAddPortlet (_string))
sem_DeclSimple ((DeclSimple_ConsAddTitle (_string))) =
    (sem_DeclSimple_ConsAddTitle (_string))
sem_DeclSimple_ConsAddIcon :: (String) ->
                              (T_DeclSimple)
sem_DeclSimple_ConsAddIcon (string_) =
    let 
    in  ( )
sem_DeclSimple_ConsAddPortlet :: (String) ->
                                 (T_DeclSimple)
sem_DeclSimple_ConsAddPortlet (string_) =
    let 
    in  ( )
sem_DeclSimple_ConsAddTitle :: (String) ->
                               (T_DeclSimple)
sem_DeclSimple_ConsAddTitle (string_) =
    let 
    in  ( )
-- Decls -------------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for Decls.Cons:

-}
{-
   local variables for Decls.Nil:

-}
type Decls = [(Decl)]
-- semantic domain
type T_Decls = ( )
-- cata
sem_Decls :: (Decls) ->
             (T_Decls)
sem_Decls (list) =
    (Prelude.foldr (sem_Decls_Cons) (sem_Decls_Nil) ((Prelude.map sem_Decl list)))
sem_Decls_Cons :: (T_Decl) ->
                  (T_Decls) ->
                  (T_Decls)
sem_Decls_Cons (hd_) (tl_) =
    let 
    in  ( )
sem_Decls_Nil :: (T_Decls)
sem_Decls_Nil  =
    let 
    in  ( )
-- DefCampos ---------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for DefCampos.ConsCampos:

-}
data DefCampos = DefCampos_ConsCampos (DeclFields)
               deriving ( Show)
-- semantic domain
type T_DefCampos = ( )
-- cata
sem_DefCampos :: (DefCampos) ->
                 (T_DefCampos)
sem_DefCampos ((DefCampos_ConsCampos (_declFields))) =
    (sem_DefCampos_ConsCampos ((sem_DeclFields (_declFields))))
sem_DefCampos_ConsCampos :: (T_DeclFields) ->
                            (T_DefCampos)
sem_DefCampos_ConsCampos (declFields_) =
    let 
    in  ( )
-- DefInterna --------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for DefInterna.ConsInterno:

-}
data DefInterna = DefInterna_ConsInterno (String) (CuerpoInterno)
                deriving ( Show)
-- semantic domain
type T_DefInterna = ( )
-- cata
sem_DefInterna :: (DefInterna) ->
                  (T_DefInterna)
sem_DefInterna ((DefInterna_ConsInterno (_string) (_cuerpoInterno))) =
    (sem_DefInterna_ConsInterno (_string) ((sem_CuerpoInterno (_cuerpoInterno))))
sem_DefInterna_ConsInterno :: (String) ->
                              (T_CuerpoInterno) ->
                              (T_DefInterna)
sem_DefInterna_ConsInterno (string_) (cuerpoInterno_) =
    let 
    in  ( )
-- Extend ------------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:
      out                  : String

-}
{-
   local variables for Extend.ConsExtend:

-}
data Extend = Extend_ConsExtend (Type)
            deriving ( Show)
-- semantic domain
type T_Extend = ( (String))
-- cata
sem_Extend :: (Extend) ->
              (T_Extend)
sem_Extend ((Extend_ConsExtend (_type))) =
    (sem_Extend_ConsExtend ((sem_Type (_type))))
sem_Extend_ConsExtend :: (T_Type) ->
                         (T_Extend)
sem_Extend_ConsExtend (type_) =
    let _lhsOout :: (String)
        _typeIlistaTypes :: ([String])
        _typeIout :: (String)
        ( _typeIlistaTypes,_typeIout) =
            (type_ )
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 222, column 15)
        (_lhsOout@_) =
            _typeIout
    in  ( _lhsOout)
-- Import ------------------------------------------------------
{-
   inherited attributes:
      listaImportsH        : [String]

   chained attributes:

   synthesised attributes:
      listaImports         : [String]
      out                  : String
      resultado            : Bool

-}
{-
   local variables for Import.IdentificadorImport:

-}
data Import = Import_IdentificadorImport (String)
            deriving ( Show)
-- semantic domain
type T_Import = ([String]) ->
                ( ([String]),(String),(Bool))
-- cata
sem_Import :: (Import) ->
              (T_Import)
sem_Import ((Import_IdentificadorImport (_string))) =
    (sem_Import_IdentificadorImport (_string))
sem_Import_IdentificadorImport :: (String) ->
                                  (T_Import)
sem_Import_IdentificadorImport (string_) =
    \ _lhsIlistaImportsH ->
        let _lhsOlistaImports :: ([String])
            _lhsOout :: (String)
            _lhsOresultado :: (Bool)
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 100, column 24)
            (_lhsOlistaImports@_) =
                [string_]
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 175, column 24)
            (_lhsOresultado@_) =
                True
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 215, column 24)
            (_lhsOout@_) =
                "import " ++ string_
        in  ( _lhsOlistaImports,_lhsOout,_lhsOresultado)
-- Imports -----------------------------------------------------
{-
   inherited attributes:
      listaImportsH        : [String]

   chained attributes:

   synthesised attributes:
      listaImports         : [String]
      out                  : String
      resultado            : Bool

-}
{-
   local variables for Imports.Cons:

-}
{-
   local variables for Imports.Nil:

-}
type Imports = [(Import)]
-- semantic domain
type T_Imports = ([String]) ->
                 ( ([String]),(String),(Bool))
-- cata
sem_Imports :: (Imports) ->
               (T_Imports)
sem_Imports (list) =
    (Prelude.foldr (sem_Imports_Cons) (sem_Imports_Nil) ((Prelude.map sem_Import list)))
sem_Imports_Cons :: (T_Import) ->
                    (T_Imports) ->
                    (T_Imports)
sem_Imports_Cons (hd_) (tl_) =
    \ _lhsIlistaImportsH ->
        let _lhsOlistaImports :: ([String])
            _lhsOout :: (String)
            _lhsOresultado :: (Bool)
            _hdIlistaImports :: ([String])
            _hdIout :: (String)
            _hdIresultado :: (Bool)
            _hdOlistaImportsH :: ([String])
            _tlIlistaImports :: ([String])
            _tlIout :: (String)
            _tlIresultado :: (Bool)
            _tlOlistaImportsH :: ([String])
            ( _hdIlistaImports,_hdIout,_hdIresultado) =
                (hd_ (_hdOlistaImportsH))
            ( _tlIlistaImports,_tlIout,_tlIresultado) =
                (tl_ (_tlOlistaImportsH))
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 96, column 9)
            (_lhsOlistaImports@_) =
                _hdIlistaImports ++ _tlIlistaImports
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 171, column 9)
            (_lhsOresultado@_) =
                _hdIresultado && _tlIresultado
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 211, column 13)
            (_lhsOout@_) =
                _hdIout ++ "\n" ++ _tlIout
            -- copy rule (down)
            (_hdOlistaImportsH@_) =
                _lhsIlistaImportsH
            -- copy rule (down)
            (_tlOlistaImportsH@_) =
                _lhsIlistaImportsH
        in  ( _lhsOlistaImports,_lhsOout,_lhsOresultado)
sem_Imports_Nil :: (T_Imports)
sem_Imports_Nil  =
    \ _lhsIlistaImportsH ->
        let _lhsOlistaImports :: ([String])
            _lhsOout :: (String)
            _lhsOresultado :: (Bool)
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 97, column 9)
            (_lhsOlistaImports@_) =
                []
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 172, column 9)
            (_lhsOresultado@_) =
                True
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 212, column 13)
            (_lhsOout@_) =
                ""
        in  ( _lhsOlistaImports,_lhsOout,_lhsOresultado)
-- Literal -----------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for Literal.LiteralCadena:

-}
data Literal = Literal_LiteralCadena (String)
             deriving ( Show)
-- semantic domain
type T_Literal = ( )
-- cata
sem_Literal :: (Literal) ->
               (T_Literal)
sem_Literal ((Literal_LiteralCadena (_string))) =
    (sem_Literal_LiteralCadena (_string))
sem_Literal_LiteralCadena :: (String) ->
                             (T_Literal)
sem_Literal_LiteralCadena (string_) =
    let 
    in  ( )
-- Llamada -----------------------------------------------------
{-
   inherited attributes:
      listaIdsH            : [String]
      listaImportsH        : [String]
      listaTypesH          : [String]

   chained attributes:

   synthesised attributes:
      out                  : String
      resultado            : Bool

-}
{-
   local variables for Llamada.Llamada:
      error

-}
data Llamada = Llamada_Llamada (Bool) (String)
             deriving ( Show)
-- semantic domain
type T_Llamada = ([String]) ->
                 ([String]) ->
                 ([String]) ->
                 ( (String),(Bool))
-- cata
sem_Llamada :: (Llamada) ->
               (T_Llamada)
sem_Llamada ((Llamada_Llamada (_bool) (_string))) =
    (sem_Llamada_Llamada (_bool) (_string))
sem_Llamada_Llamada :: (Bool) ->
                       (String) ->
                       (T_Llamada)
sem_Llamada_Llamada (bool_) (string_) =
    \ _lhsIlistaIdsH
      _lhsIlistaImportsH
      _lhsIlistaTypesH ->
        let _lhsOout :: (String)
            _lhsOresultado :: (Bool)
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 191, column 20)
            (_lhsOresultado@_) =
                _error
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 190, column 12)
            (_error@_) =
                string_ `elem` _lhsIlistaImportsH
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 238, column 12)
            (_lhsOout@_) =
                string_ ++ ( if (not _error) then "ERROR" else "OK" )
        in  ( _lhsOout,_lhsOresultado)
-- Method ------------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for Method.ConsMethod:

-}
data Method = Method_ConsMethod (String) (Decls)
            deriving ( Show)
-- semantic domain
type T_Method = ( )
-- cata
sem_Method :: (Method) ->
              (T_Method)
sem_Method ((Method_ConsMethod (_string) (_decls))) =
    (sem_Method_ConsMethod (_string) ((sem_Decls (_decls))))
sem_Method_ConsMethod :: (String) ->
                         (T_Decls) ->
                         (T_Method)
sem_Method_ConsMethod (string_) (decls_) =
    let 
    in  ( )
-- Methods -----------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:

-}
{-
   local variables for Methods.Cons:

-}
{-
   local variables for Methods.Nil:

-}
type Methods = [(Method)]
-- semantic domain
type T_Methods = ( )
-- cata
sem_Methods :: (Methods) ->
               (T_Methods)
sem_Methods (list) =
    (Prelude.foldr (sem_Methods_Cons) (sem_Methods_Nil) ((Prelude.map sem_Method list)))
sem_Methods_Cons :: (T_Method) ->
                    (T_Methods) ->
                    (T_Methods)
sem_Methods_Cons (hd_) (tl_) =
    let 
    in  ( )
sem_Methods_Nil :: (T_Methods)
sem_Methods_Nil  =
    let 
    in  ( )
-- Module ------------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:
      out                  : String
      resultado            : Bool

-}
{-
   local variables for Module.ConsModule:

-}
data Module = Module_ConsModule (ModuleDeclaration) (ModuleBody)
            deriving ( Show)
-- semantic domain
type T_Module = ( (String),(Bool))
-- cata
sem_Module :: (Module) ->
              (T_Module)
sem_Module ((Module_ConsModule (_moduleDeclaration) (_moduleBody))) =
    (sem_Module_ConsModule ((sem_ModuleDeclaration (_moduleDeclaration))) ((sem_ModuleBody (_moduleBody))))
sem_Module_ConsModule :: (T_ModuleDeclaration) ->
                         (T_ModuleBody) ->
                         (T_Module)
sem_Module_ConsModule (moduleDeclaration_) (moduleBody_) =
    let _lhsOout :: (String)
        _lhsOresultado :: (Bool)
        _moduleDeclarationIout :: (String)
        _moduleBodyIlistaImports :: ([String])
        _moduleBodyIout :: (String)
        _moduleBodyIresultado :: (Bool)
        ( _moduleDeclarationIout) =
            (moduleDeclaration_ )
        ( _moduleBodyIlistaImports,_moduleBodyIout,_moduleBodyIresultado) =
            (moduleBody_ )
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 164, column 15)
        (_lhsOresultado@_) =
            _moduleBodyIresultado
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 201, column 15)
        (_lhsOout@_) =
            "module " ++ moduleDeclaration_ ++ " where \n" ++ _moduleBodyIout
    in  ( _lhsOout,_lhsOresultado)
-- ModuleBody --------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:
      listaImports         : [String]
      out                  : String
      resultado            : Bool

-}
{-
   local variables for ModuleBody.ConsModBody:

-}
{-
   local variables for ModuleBody.ConsModBody2:

-}
data ModuleBody = ModuleBody_ConsModBody (Imports) (Portal)
                | ModuleBody_ConsModBody2 (Portal)
                deriving ( Show)
-- semantic domain
type T_ModuleBody = ( ([String]),(String),(Bool))
-- cata
sem_ModuleBody :: (ModuleBody) ->
                  (T_ModuleBody)
sem_ModuleBody ((ModuleBody_ConsModBody (_imports) (_portal))) =
    (sem_ModuleBody_ConsModBody ((sem_Imports (_imports))) ((sem_Portal (_portal))))
sem_ModuleBody ((ModuleBody_ConsModBody2 (_portal))) =
    (sem_ModuleBody_ConsModBody2 ((sem_Portal (_portal))))
sem_ModuleBody_ConsModBody :: (T_Imports) ->
                              (T_Portal) ->
                              (T_ModuleBody)
sem_ModuleBody_ConsModBody (imports_) (portal_) =
    let _lhsOlistaImports :: ([String])
        _lhsOout :: (String)
        _lhsOresultado :: (Bool)
        _importsIlistaImports :: ([String])
        _importsIout :: (String)
        _importsIresultado :: (Bool)
        _importsOlistaImportsH :: ([String])
        _portalIout :: (String)
        ( _importsIlistaImports,_importsIout,_importsIresultado) =
            (imports_ (_importsOlistaImportsH))
        ( _portalIout) =
            (portal_ )
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 92, column 17)
        (_lhsOlistaImports@_) =
            _importsIlistaImports
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 146, column 16)
        (_importsOlistaImportsH@_) =
            _importsIlistaImports
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 167, column 17)
        (_lhsOresultado@_) =
            _importsIresultado
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 207, column 16)
        (_lhsOout@_) =
            _importsIout ++ _portalIout
    in  ( _lhsOlistaImports,_lhsOout,_lhsOresultado)
sem_ModuleBody_ConsModBody2 :: (T_Portal) ->
                               (T_ModuleBody)
sem_ModuleBody_ConsModBody2 (portal_) =
    let _lhsOlistaImports :: ([String])
        _lhsOout :: (String)
        _lhsOresultado :: (Bool)
        _portalIout :: (String)
        ( _portalIout) =
            (portal_ )
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 93, column 17)
        (_lhsOlistaImports@_) =
            []
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 168, column 17)
        (_lhsOresultado@_) =
            True
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 208, column 17)
        (_lhsOout@_) =
            ""
    in  ( _lhsOlistaImports,_lhsOout,_lhsOresultado)
-- ModuleDeclaration -------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:
      out                  : String

-}
{-
   local variables for ModuleDeclaration.ModDec:

-}
data ModuleDeclaration = ModuleDeclaration_ModDec (String)
                       deriving ( Show)
-- semantic domain
type T_ModuleDeclaration = ( (String))
-- cata
sem_ModuleDeclaration :: (ModuleDeclaration) ->
                         (T_ModuleDeclaration)
sem_ModuleDeclaration ((ModuleDeclaration_ModDec (_string))) =
    (sem_ModuleDeclaration_ModDec (_string))
sem_ModuleDeclaration_ModDec :: (String) ->
                                (T_ModuleDeclaration)
sem_ModuleDeclaration_ModDec (string_) =
    let _lhsOout :: (String)
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 204, column 11)
        (_lhsOout@_) =
            string_
    in  ( _lhsOout)
-- Portal ------------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:
      out                  : String

-}
{-
   local variables for Portal.ConsPortal:

-}
{-
   local variables for Portal.ConsPortal2:

-}
data Portal = Portal_ConsPortal (String) (PortalBody)
            | Portal_ConsPortal2 (String) (Extend) (PortalBody)
            deriving ( Show)
-- semantic domain
type T_Portal = ( (String))
-- cata
sem_Portal :: (Portal) ->
              (T_Portal)
sem_Portal ((Portal_ConsPortal (_string) (_portalBody))) =
    (sem_Portal_ConsPortal (_string) ((sem_PortalBody (_portalBody))))
sem_Portal ((Portal_ConsPortal2 (_string) (_extend) (_portalBody))) =
    (sem_Portal_ConsPortal2 (_string) ((sem_Extend (_extend))) ((sem_PortalBody (_portalBody))))
sem_Portal_ConsPortal :: (String) ->
                         (T_PortalBody) ->
                         (T_Portal)
sem_Portal_ConsPortal (string_) (portalBody_) =
    let _lhsOout :: (String)
        _portalBodyIout :: (String)
        ( _portalBodyIout) =
            (portalBody_ )
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 218, column 15)
        (_lhsOout@_) =
            "new " ++ string_ ++ "\n<% \n" ++ _portalBodyIout ++ "%>\n"
    in  ( _lhsOout)
sem_Portal_ConsPortal2 :: (String) ->
                          (T_Extend) ->
                          (T_PortalBody) ->
                          (T_Portal)
sem_Portal_ConsPortal2 (string_) (extend_) (portalBody_) =
    let _lhsOout :: (String)
        _extendIout :: (String)
        _portalBodyIout :: (String)
        ( _extendIout) =
            (extend_ )
        ( _portalBodyIout) =
            (portalBody_ )
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 219, column 16)
        (_lhsOout@_) =
            "new " ++ string_ ++ " ( " ++ _extendIout ++ " ) \n<% \n" ++ _portalBodyIout ++ "%>\n"
    in  ( _lhsOout)
-- PortalBody --------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:
      out                  : String

-}
{-
   local variables for PortalBody.ConsPortalBody:

-}
data PortalBody = PortalBody_ConsPortalBody (TopDecls) (Methods)
                deriving ( Show)
-- semantic domain
type T_PortalBody = ( (String))
-- cata
sem_PortalBody :: (PortalBody) ->
                  (T_PortalBody)
sem_PortalBody ((PortalBody_ConsPortalBody (_topDecls) (_methods))) =
    (sem_PortalBody_ConsPortalBody ((sem_TopDecls (_topDecls))) ((sem_Methods (_methods))))
sem_PortalBody_ConsPortalBody :: (T_TopDecls) ->
                                 (T_Methods) ->
                                 (T_PortalBody)
sem_PortalBody_ConsPortalBody (topDecls_) (methods_) =
    let _lhsOout :: (String)
        _topDeclsIlistaIds :: ([String])
        _topDeclsIlistaTypes :: ([String])
        _topDeclsIout :: (String)
        _topDeclsOlistaIdsH :: ([String])
        _topDeclsOlistaTypesH :: ([String])
        ( _topDeclsIlistaIds,_topDeclsIlistaTypes,_topDeclsIout) =
            (topDecls_ (_topDeclsOlistaIdsH) (_topDeclsOlistaTypesH))
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 156, column 35)
        (_topDeclsOlistaTypesH@_) =
            _topDeclsIlistaTypes
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 155, column 19)
        (_topDeclsOlistaIdsH@_) =
            _topDeclsIlistaIds
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 225, column 19)
        (_lhsOout@_) =
            _topDeclsIout
    in  ( _lhsOout)
-- Root --------------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:
      out                  : IO ()

-}
{-
   local variables for Root.Root:

-}
data Root = Root_Root (Module)
          deriving ( Show)
-- semantic domain
type T_Root = ( (IO ()))
-- cata
sem_Root :: (Root) ->
            (T_Root)
sem_Root ((Root_Root (_module))) =
    (sem_Root_Root ((sem_Module (_module))))
sem_Root_Root :: (T_Module) ->
                 (T_Root)
sem_Root_Root (module_) =
    let _lhsOout :: (IO ())
        _moduleIout :: (String)
        _moduleIresultado :: (Bool)
        ( _moduleIout,_moduleIresultado) =
            (module_ )
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 198, column 9)
        (_lhsOout@_) =
            putStrLn (_moduleIout)
    in  ( _lhsOout)
-- TopDecl -----------------------------------------------------
{-
   inherited attributes:
      listaIdsH            : [String]
      listaTypesH          : [String]

   chained attributes:

   synthesised attributes:
      listaIds             : [String]
      listaTypes           : [String]
      out                  : String

-}
{-
   local variables for TopDecl.ConsTopDecl:

-}
data TopDecl = TopDecl_ConsTopDecl (String) (Type)
             deriving ( Show)
-- semantic domain
type T_TopDecl = ([String]) ->
                 ([String]) ->
                 ( ([String]),([String]),(String))
-- cata
sem_TopDecl :: (TopDecl) ->
               (T_TopDecl)
sem_TopDecl ((TopDecl_ConsTopDecl (_string) (_type))) =
    (sem_TopDecl_ConsTopDecl (_string) ((sem_Type (_type))))
sem_TopDecl_ConsTopDecl :: (String) ->
                           (T_Type) ->
                           (T_TopDecl)
sem_TopDecl_ConsTopDecl (string_) (type_) =
    \ _lhsIlistaIdsH
      _lhsIlistaTypesH ->
        let _lhsOlistaIds :: ([String])
            _lhsOlistaTypes :: ([String])
            _lhsOout :: (String)
            _typeIlistaTypes :: ([String])
            _typeIout :: (String)
            ( _typeIlistaTypes,_typeIout) =
                (type_ )
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 112, column 16)
            (_lhsOlistaIds@_) =
                [string_]
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 128, column 16)
            (_lhsOlistaTypes@_) =
                _typeIlistaTypes
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 232, column 16)
            (_lhsOout@_) =
                "type " ++ string_ ++ " = " ++ _typeIout
        in  ( _lhsOlistaIds,_lhsOlistaTypes,_lhsOout)
-- TopDecls ----------------------------------------------------
{-
   inherited attributes:
      listaIdsH            : [String]
      listaTypesH          : [String]

   chained attributes:

   synthesised attributes:
      listaIds             : [String]
      listaTypes           : [String]
      out                  : String

-}
{-
   local variables for TopDecls.Cons:

-}
{-
   local variables for TopDecls.Nil:

-}
type TopDecls = [(TopDecl)]
-- semantic domain
type T_TopDecls = ([String]) ->
                  ([String]) ->
                  ( ([String]),([String]),(String))
-- cata
sem_TopDecls :: (TopDecls) ->
                (T_TopDecls)
sem_TopDecls (list) =
    (Prelude.foldr (sem_TopDecls_Cons) (sem_TopDecls_Nil) ((Prelude.map sem_TopDecl list)))
sem_TopDecls_Cons :: (T_TopDecl) ->
                     (T_TopDecls) ->
                     (T_TopDecls)
sem_TopDecls_Cons (hd_) (tl_) =
    \ _lhsIlistaIdsH
      _lhsIlistaTypesH ->
        let _lhsOlistaIds :: ([String])
            _lhsOlistaTypes :: ([String])
            _lhsOout :: (String)
            _hdIlistaIds :: ([String])
            _hdIlistaTypes :: ([String])
            _hdIout :: (String)
            _hdOlistaIdsH :: ([String])
            _hdOlistaTypesH :: ([String])
            _tlIlistaIds :: ([String])
            _tlIlistaTypes :: ([String])
            _tlIout :: (String)
            _tlOlistaIdsH :: ([String])
            _tlOlistaTypesH :: ([String])
            ( _hdIlistaIds,_hdIlistaTypes,_hdIout) =
                (hd_ (_hdOlistaIdsH) (_hdOlistaTypesH))
            ( _tlIlistaIds,_tlIlistaTypes,_tlIout) =
                (tl_ (_tlOlistaIdsH) (_tlOlistaTypesH))
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 107, column 9)
            (_lhsOlistaIds@_) =
                _hdIlistaIds ++ _tlIlistaIds
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 124, column 9)
            (_lhsOlistaTypes@_) =
                _hdIlistaTypes ++ _tlIlistaTypes
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 228, column 13)
            (_lhsOout@_) =
                "    " ++ _hdIout ++ "\n" ++ _tlIout
            -- copy rule (down)
            (_hdOlistaIdsH@_) =
                _lhsIlistaIdsH
            -- copy rule (down)
            (_hdOlistaTypesH@_) =
                _lhsIlistaTypesH
            -- copy rule (down)
            (_tlOlistaIdsH@_) =
                _lhsIlistaIdsH
            -- copy rule (down)
            (_tlOlistaTypesH@_) =
                _lhsIlistaTypesH
        in  ( _lhsOlistaIds,_lhsOlistaTypes,_lhsOout)
sem_TopDecls_Nil :: (T_TopDecls)
sem_TopDecls_Nil  =
    \ _lhsIlistaIdsH
      _lhsIlistaTypesH ->
        let _lhsOlistaIds :: ([String])
            _lhsOlistaTypes :: ([String])
            _lhsOout :: (String)
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 108, column 9)
            (_lhsOlistaIds@_) =
                []
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 125, column 9)
            (_lhsOlistaTypes@_) =
                []
            -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 229, column 13)
            (_lhsOout@_) =
                ""
        in  ( _lhsOlistaIds,_lhsOlistaTypes,_lhsOout)
-- Type --------------------------------------------------------
{-
   inherited attributes:

   chained attributes:

   synthesised attributes:
      listaTypes           : [String]
      out                  : String

-}
{-
   local variables for Type.ConsType:

-}
data Type = Type_ConsType (String)
          deriving ( Show)
-- semantic domain
type T_Type = ( ([String]),(String))
-- cata
sem_Type :: (Type) ->
            (T_Type)
sem_Type ((Type_ConsType (_string))) =
    (sem_Type_ConsType (_string))
sem_Type_ConsType :: (String) ->
                     (T_Type)
sem_Type_ConsType (string_) =
    let _lhsOlistaTypes :: ([String])
        _lhsOout :: (String)
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 131, column 13)
        (_lhsOlistaTypes@_) =
            [string_]
        -- "/home/benjamin/workspace/GenericPortlet/AG/Contexto.ag"(line 235, column 13)
        (_lhsOout@_) =
            string_
    in  ( _lhsOlistaTypes,_lhsOout)


